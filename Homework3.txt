Utwórz klasę Person, która zawiera 4 protected właściwości: name, age, email i phone, oraz gettery i settery dla każdej z nich.
Utwórz klasę dziedziczącą z Person o nazwie Student, która rozszerza Person o metodę publiczną EnrollCourse przyjmującą nazwę kursu jako parametr i wyświetlającą informacje o zapisie na kurs (console.log).

Utwórz 2 interfejsy: Rectangle (zawiera width, height) oraz Cuboid (zawiera width, height, depth).

Utwórz generyczną klasę o nazwie ArrayHelper, która zawiera jedną metodę FilterByType<T>(), przyjmującą tablicę dowolnych elementów oraz wartość typu T jako parametry, zwracającą tablicę elementów typu T.

Utwórz enum o nazwie Color zawierający wartości Red, Blue, Green, Yellow i Purple.

Utwórz klasę Car, która zawiera 3 private właściwości: brand, model i year, oraz gettery i settery dla każdej z nich. Następnie utwórz klasę dziedziczącą z Car o nazwie ElectricCar, która rozszerza Car o publiczną właściwość batteryCapacity.

Utwórz 2 interfejsy: Circle (zawiera radius) oraz Sphere (zawiera radius).

Utwórz generyczną klasę o nazwie KeyValuePair, która zawiera dwie właściwości: key typu K i value typu V. Dodaj metodę toString() zwracającą łańcuch znaków z wartościami key i value.

Utwórz enum o nazwie Size zawierający wartości Small, Medium, Large, ExtraLarge.

Utwórz klasę BankAccount, która zawiera 3 protected właściwości: accountNumber, balance i currency, oraz gettery i settery dla każdej z nich. Następnie utwórz klasę dziedziczącą z BankAccount o nazwie SavingsAccount, która rozszerza BankAccount o publiczną metodę addInterest przyjmującą wartość procentową jako parametr i dodającą ją do balance.

Utwórz 2 interfejsy: Line (zawiera startPoint, endPoint - obiekty typu 2DPoint) oraz LineSegment (zawiera startPoint, endPoint - obiekty typu 3DPoint).